{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elava\\\\Desktop\\\\lokesh\\\\call  log\\\\CallLogApp_Frontend\\\\src\\\\CallLogs.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, CircularProgress, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CallLogs = () => {\n  _s();\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    axios.get(\"https://calllog-backend.onrender.com/api/logs/all\");\n    calllog - backend - production.up.railway.app.then(response => {\n      console.log(\"Fetched logs:\", response.data); // Debug\n      setLogs(response.data);\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Error fetching logs:\", error);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"1rem\",\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Loading call logs...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n  if (logs.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"1rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"No call logs available for today.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"1rem\"\n    },\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Phone Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Call Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Call Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Duration (seconds)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: logs.map((log, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: log.phoneNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: log.callType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: new Date(log.callTime).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: log.duration\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(CallLogs, \"lYx/TOoNu7KeE6EXJa8Z4htpyYA=\");\n_c = CallLogs;\nexport default CallLogs;\nvar _c;\n$RefreshReg$(_c, \"CallLogs\");","map":{"version":3,"names":["useEffect","useState","axios","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","CircularProgress","Typography","jsxDEV","_jsxDEV","CallLogs","_s","logs","setLogs","loading","setLoading","get","calllog","backend","production","up","railway","app","then","response","console","log","data","catch","error","style","padding","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","length","variant","component","map","index","phoneNumber","callType","Date","callTime","toLocaleString","duration","_c","$RefreshReg$"],"sources":["C:/Users/elava/Desktop/lokesh/call  log/CallLogApp_Frontend/src/CallLogs.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  CircularProgress,\n  Typography,\n} from \"@mui/material\";\n\nconst CallLogs = () => {\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    axios\n      .get(\"https://calllog-backend.onrender.com/api/logs/all\")\n      calllog-backend-production.up.railway.app\n      .then((response) => {\n        console.log(\"Fetched logs:\", response.data); // Debug\n        setLogs(response.data);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching logs:\", error);\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) {\n    return (\n      <div style={{ padding: \"1rem\", textAlign: \"center\" }}>\n        <CircularProgress />\n        <Typography>Loading call logs...</Typography>\n      </div>\n    );\n  }\n\n  if (logs.length === 0) {\n    return (\n      <div style={{ padding: \"1rem\" }}>\n        <Typography variant=\"h6\">No call logs available for today.</Typography>\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ padding: \"1rem\" }}>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Phone Number</TableCell>\n              <TableCell>Call Type</TableCell>\n              <TableCell>Call Time</TableCell>\n              <TableCell>Duration (seconds)</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {logs.map((log, index) => (\n              <TableRow key={index}>\n                <TableCell>{log.phoneNumber}</TableCell>\n                <TableCell>{log.callType}</TableCell>\n                <TableCell>\n                  {new Date(log.callTime).toLocaleString()}\n                </TableCell>\n                <TableCell>{log.duration}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default CallLogs;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}