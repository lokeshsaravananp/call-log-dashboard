{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elava\\\\Desktop\\\\lokesh\\\\call  log\\\\CallLogApp_Frontend\\\\src\\\\CallLogs.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CallLogs = () => {\n  _s();\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/api/logs/today\").then(response => {\n      console.log(\"Fetched logs:\", response.data); // Debug\n      setLogs(response.data);\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Error fetching logs:\", error);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(Typography, {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 23\n  }, this);\n  if (!logs.length) return /*#__PURE__*/_jsxDEV(Typography, {\n    children: \"No call logs available for today.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 28\n  }, this);\n  console.log(\"Fetched logsnhvhjvhjvhj:\", response.data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Call Logs Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), logs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No call logs available for today.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Phone Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Call Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Call Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Duration (seconds)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: logs.map((log, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: log.phoneNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: log.callType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: new Date(log.callTime).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: log.duration\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(CallLogs, \"lYx/TOoNu7KeE6EXJa8Z4htpyYA=\");\n_c = CallLogs;\nexport default CallLogs;\nvar _c;\n$RefreshReg$(_c, \"CallLogs\");","map":{"version":3,"names":["useEffect","useState","axios","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Typography","jsxDEV","_jsxDEV","Fragment","_Fragment","CallLogs","_s","logs","setLogs","loading","setLoading","get","then","response","console","log","data","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","component","map","index","phoneNumber","callType","Date","callTime","toLocaleString","duration","_c","$RefreshReg$"],"sources":["C:/Users/elava/Desktop/lokesh/call  log/CallLogApp_Frontend/src/CallLogs.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport {\n  Table, TableBody, TableCell, TableContainer,\n  TableHead, TableRow, Paper, Typography\n} from \"@mui/material\";\n\nconst CallLogs = () => {\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/api/logs/today\")\n      .then(response => {\n        console.log(\"Fetched logs:\", response.data); // Debug\n        setLogs(response.data);\n        setLoading(false);\n      })\n      .catch(error => {\n        console.error(\"Error fetching logs:\", error);\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) return <Typography>Loading...</Typography>;\n  if (!logs.length) return <Typography>No call logs available for today.</Typography>;\n  console.log(\"Fetched logsnhvhjvhjvhj:\", response.data);\n  return (\n    <>\n        <h1>Call Logs Dashboard</h1>\n        {logs.length === 0 ? (\n            <p>No call logs available for today.</p>\n        ) : (\n            <TableContainer component={Paper}>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Phone Number</TableCell>\n                            <TableCell>Call Type</TableCell>\n                            <TableCell>Call Time</TableCell>\n                            <TableCell>Duration (seconds)</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {logs.map((log, index) => (\n                            <TableRow key={index}>\n                                <TableCell>{log.phoneNumber}</TableCell>\n                                <TableCell>{log.callType}</TableCell>\n                                <TableCell>{new Date(log.callTime).toLocaleString()}</TableCell>\n                                <TableCell>{log.duration}</TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        )}\n    </>\n);\n};\n\nexport default CallLogs;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}