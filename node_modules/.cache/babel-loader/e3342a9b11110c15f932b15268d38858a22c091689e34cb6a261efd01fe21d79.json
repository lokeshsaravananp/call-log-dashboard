{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elava\\\\Desktop\\\\lokesh\\\\call-log-dashboard\\\\src\\\\CallLogs.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, CircularProgress, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CallLogs = () => {\n  _s();\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    axios.get(\"https://calllog-backend-1.onrender.com/api/logs/all\").then(response => {\n      console.log(\"Fetched logs:\", response.data);\n      setLogs(response.data);\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Error fetching logs:\", error);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"2rem\",\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          marginTop: 2\n        },\n        children: \"Loading call logs...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n  if (logs.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"2rem\",\n        textAlign: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"No call logs available for today.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"2rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      sx: {\n        fontWeight: \"bold\"\n      },\n      children: \"Call Logs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      elevation: 3,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              backgroundColor: \"#1976d2\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                color: \"white\",\n                fontWeight: \"bold\"\n              },\n              children: \"Phone Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                color: \"white\",\n                fontWeight: \"bold\"\n              },\n              children: \"Call Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                color: \"white\",\n                fontWeight: \"bold\"\n              },\n              children: \"Call Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                color: \"white\",\n                fontWeight: \"bold\"\n              },\n              children: \"Duration (seconds)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: logs.map((log, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              \"&:hover\": {\n                backgroundColor: \"#f5f5f5\"\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: log.phoneNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: log.callType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: new Date(log.callTime).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [(log.duration / 60).toFixed(2), \" min\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(CallLogs, \"lYx/TOoNu7KeE6EXJa8Z4htpyYA=\");\n_c = CallLogs;\nexport default CallLogs;\nvar _c;\n$RefreshReg$(_c, \"CallLogs\");","map":{"version":3,"names":["useEffect","useState","axios","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","CircularProgress","Typography","jsxDEV","_jsxDEV","CallLogs","_s","logs","setLogs","loading","setLoading","get","then","response","console","log","data","catch","error","style","padding","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","sx","marginTop","length","gutterBottom","fontWeight","component","elevation","backgroundColor","color","map","index","phoneNumber","callType","Date","callTime","toLocaleString","duration","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/elava/Desktop/lokesh/call-log-dashboard/src/CallLogs.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  CircularProgress,\r\n  Typography,\r\n} from \"@mui/material\";\r\n\r\nconst CallLogs = () => {\r\n  const [logs, setLogs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://calllog-backend-1.onrender.com/api/logs/all\")\r\n      .then((response) => {\r\n        console.log(\"Fetched logs:\", response.data);\r\n        setLogs(response.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching logs:\", error);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div style={{ padding: \"2rem\", textAlign: \"center\" }}>\r\n        <CircularProgress />\r\n        <Typography variant=\"h6\" sx={{ marginTop: 2 }}>\r\n          Loading call logs...\r\n        </Typography>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (logs.length === 0) {\r\n    return (\r\n      <div style={{ padding: \"2rem\", textAlign: \"center\" }}>\r\n        <Typography variant=\"h6\">No call logs available for today.</Typography>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: \"2rem\" }}>\r\n      <Typography variant=\"h5\" gutterBottom sx={{ fontWeight: \"bold\" }}>\r\n        Call Logs\r\n      </Typography>\r\n      <TableContainer component={Paper} elevation={3}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow sx={{ backgroundColor: \"#1976d2\" }}>\r\n              <TableCell sx={{ color: \"white\", fontWeight: \"bold\" }}>Phone Number</TableCell>\r\n              <TableCell sx={{ color: \"white\", fontWeight: \"bold\" }}>Call Type</TableCell>\r\n              <TableCell sx={{ color: \"white\", fontWeight: \"bold\" }}>Call Time</TableCell>\r\n              <TableCell sx={{ color: \"white\", fontWeight: \"bold\" }}>Duration (seconds)</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {logs.map((log, index) => (\r\n              <TableRow\r\n                key={index}\r\n                sx={{\r\n                  \"&:hover\": { backgroundColor: \"#f5f5f5\" },\r\n                }}\r\n              >\r\n                <TableCell>{log.phoneNumber}</TableCell>\r\n                <TableCell>{log.callType}</TableCell>\r\n                <TableCell>{new Date(log.callTime).toLocaleString()}</TableCell>\r\n                <TableCell>{(log.duration / 60).toFixed(2)} min</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CallLogs;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}