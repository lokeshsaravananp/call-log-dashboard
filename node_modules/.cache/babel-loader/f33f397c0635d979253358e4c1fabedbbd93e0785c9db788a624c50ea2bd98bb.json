{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elava\\\\Desktop\\\\lokesh\\\\call  log\\\\frontend\\\\src\\\\CallLogs.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CallLogs = () => {\n  _s();\n  const [logs, setLogs] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/api/logs/today\").then(response => setLogs(response.data)).catch(error => console.error(\"Error fetching logs:\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Phone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Call Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Call Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Duration (seconds)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: logs.map((log, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: log.phoneNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: log.callType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: new Date(log.callTime).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: log.duration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_s(CallLogs, \"6h9FKNtuyCQaVwwdLqmS9omOzEQ=\");\n_c = CallLogs;\nexport default CallLogs;\nvar _c;\n$RefreshReg$(_c, \"CallLogs\");","map":{"version":3,"names":["useEffect","useState","axios","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","jsxDEV","_jsxDEV","CallLogs","_s","logs","setLogs","get","then","response","data","catch","error","console","component","children","fileName","_jsxFileName","lineNumber","columnNumber","map","log","index","phoneNumber","callType","Date","callTime","toLocaleString","duration","_c","$RefreshReg$"],"sources":["C:/Users/elava/Desktop/lokesh/call  log/frontend/src/CallLogs.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from \"@mui/material\";\n\nconst CallLogs = () => {\n    const [logs, setLogs] = useState([]);\n\n    useEffect(() => {\n        axios.get(\"http://localhost:8080/api/logs/today\")\n            .then(response => setLogs(response.data))\n            .catch(error => console.error(\"Error fetching logs:\", error));\n    }, []);\n\n    return (\n        <TableContainer component={Paper}>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Phone Number</TableCell>\n                        <TableCell>Call Type</TableCell>\n                        <TableCell>Call Time</TableCell>\n                        <TableCell>Duration (seconds)</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {logs.map((log, index) => (\n                        <TableRow key={index}>\n                            <TableCell>{log.phoneNumber}</TableCell>\n                            <TableCell>{log.callType}</TableCell>\n                            <TableCell>{new Date(log.callTime).toLocaleString()}</TableCell>\n                            <TableCell>{log.duration}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n};\n\nexport default CallLogs;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}