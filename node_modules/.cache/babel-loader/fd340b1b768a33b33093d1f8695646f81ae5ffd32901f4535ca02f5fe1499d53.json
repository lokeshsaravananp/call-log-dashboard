{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elava\\\\Desktop\\\\lokesh\\\\call  log\\\\frontend\\\\src\\\\CallLogs.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CallLogs = () => {\n  _s();\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/api/logs/today\").then(response => {\n      console.log(\"Fetched logs:\", response.data); // Debug\n      setLogs(response.data);\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Error fetching logs:\", error);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(Typography, {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 23\n  }, this);\n  if (!logs.length) return /*#__PURE__*/_jsxDEV(Typography, {\n    children: \"No call logs available for today.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 28\n  }, this);\n  console.log(\"Fetched logs:\", response.data);\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Phone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Call Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Call Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Duration (seconds)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: logs.map(log => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: log.phoneNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: log.callType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: new Date(log.callTime).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: log.duration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, log.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(CallLogs, \"lYx/TOoNu7KeE6EXJa8Z4htpyYA=\");\n_c = CallLogs;\nexport default CallLogs;\nvar _c;\n$RefreshReg$(_c, \"CallLogs\");","map":{"version":3,"names":["useEffect","useState","axios","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Typography","jsxDEV","_jsxDEV","CallLogs","_s","logs","setLogs","loading","setLoading","get","then","response","console","log","data","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","component","map","phoneNumber","callType","Date","callTime","toLocaleString","duration","id","_c","$RefreshReg$"],"sources":["C:/Users/elava/Desktop/lokesh/call  log/frontend/src/CallLogs.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport {\n  Table, TableBody, TableCell, TableContainer,\n  TableHead, TableRow, Paper, Typography\n} from \"@mui/material\";\n\nconst CallLogs = () => {\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/api/logs/today\")\n      .then(response => {\n        console.log(\"Fetched logs:\", response.data); // Debug\n        setLogs(response.data);\n        setLoading(false);\n      })\n      .catch(error => {\n        console.error(\"Error fetching logs:\", error);\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) return <Typography>Loading...</Typography>;\n  if (!logs.length) return <Typography>No call logs available for today.</Typography>;\n  console.log(\"Fetched logs:\", response.data);\n\n  return (\n    <TableContainer component={Paper}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Phone Number</TableCell>\n            <TableCell>Call Type</TableCell>\n            <TableCell>Call Time</TableCell>\n            <TableCell>Duration (seconds)</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {logs.map((log) => (\n            <TableRow key={log.id}>\n              <TableCell>{log.phoneNumber}</TableCell>\n              <TableCell>{log.callType}</TableCell>\n              <TableCell>{new Date(log.callTime).toLocaleString()}</TableCell>\n              <TableCell>{log.duration}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default CallLogs;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}